<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DZF Web Blog</title>
  
  
  <link href="http://www.dzfweb.com.br/atom.xml" rel="self"/>
  
  <link href="http://www.dzfweb.com.br/"/>
  <updated>2023-01-28T20:23:52.310Z</updated>
  <id>http://www.dzfweb.com.br/</id>
  
  <author>
    <name>Douglas Zanco Franco</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Microservi√ßos .NET: Arquitetura para aplica√ß√µes em containers com .NET</title>
    <link href="http://www.dzfweb.com.br/2017/10/04/Microservicos-NET-Arquitetura-para-aplicacoes-em-containers-com-NET/"/>
    <id>http://www.dzfweb.com.br/2017/10/04/Microservicos-NET-Arquitetura-para-aplicacoes-em-containers-com-NET/</id>
    <published>2017-10-04T18:09:05.000Z</published>
    <updated>2023-01-28T20:23:52.310Z</updated>
    
    <content type="html"><![CDATA[<p>A Microsoft disponibilizou um ebook oficial e gratuito sobre arquitetura .NET para aplica√ß√µes em containers com docker. Para facilitar a leitura pelos ereaders, realizei a convers√£o para Gitbook.</p><span id="more"></span><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p>MOBI<br><a href="https://www.gitbook.com/download/mobi/book/dzfweb/microsoft-microservices-book">https://www.gitbook.com/download/mobi/book/dzfweb/microsoft-microservices-book</a></p><h2 id="EPUB"><a href="#EPUB" class="headerlink" title="EPUB"></a>EPUB</h2><p><a href="https://www.gitbook.com/download/epub/book/dzfweb/microsoft-microservices-book">https://www.gitbook.com/download/epub/book/dzfweb/microsoft-microservices-book</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;A Microsoft disponibilizou um ebook oficial e gratuito sobre arquitetura .NET para aplica√ß√µes em containers com docker. Para facilitar a leitura pelos ereaders, realizei a convers√£o para Gitbook.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Microservi√ßos .NET Arquitetura" scheme="http://www.dzfweb.com.br/tags/Microservicos-NET-Arquitetura/"/>
    
  </entry>
  
  <entry>
    <title>Blazor traz de volta .NET aos navegadores</title>
    <link href="http://www.dzfweb.com.br/2017/09/10/Blazor-traz-de-volta-NET-aos-navegadores/"/>
    <id>http://www.dzfweb.com.br/2017/09/10/Blazor-traz-de-volta-NET-aos-navegadores/</id>
    <published>2017-09-10T18:08:52.000Z</published>
    <updated>2023-01-28T20:22:26.577Z</updated>
    
    <content type="html"><![CDATA[<p>O Blazor √© um experimento criado por Steve Sanderson que torna poss√≠vel a utiliza√ß√£o de .NET aos navegadores usando WebAssembly e DotNetAnywhere. N√£o se trata de um Framework completo como Flash ou Silverlight, mas sim um teste para verificar o que √© poss√≠vel fazer com tal tecnologia.</p><span id="more"></span><p>O WebAssembly se descreve como um padr√£o para ‚Äúum ambiente de execu√ß√£o seguro, test√°vel, e que pode ser implementado at√© mesmo em m√°quinas virtuais JavaScript‚Äù. Embora ele tenha uma melhor performance em navegadores que o oferecem suporte nativo, o WebAssembly pode ser interpretado por navegadores antigos atrav√©s de conversores e asm.js.</p><p>Atualmente, o WebAssembly foi projetado para oferecer suporte a aplica√ß√µes escritas em C e C++, atuando como um compilador backend para clang&#x2F;LLVM. J√° para converter C em C#, o Blazor utiliza o DotNetAnywhere, criado por Chris Bacon, que nada mais √© que um interpretador do MSIL do .NET Framework. O projeto DotNetAnywhere foi encerrado h√° cerca de 6 anos atr√°s.</p><p>O Blazor faz as seguintes altera√ß√µes no DotNetAnywhere:</p><ul><li>Suporte ao desenvolvimento com Emscripten</li><li>Suporte a chamadas JavaScript atrav√©s .NET (e vice-versa)</li><li>Adiciona recursos primitivos de interoperabilidade (ex: GCGandle)</li><li>Resolve alguns bugs</li><li>Suporte para carregar recursos do .NET Core-style</li></ul><p>Aplica√ß√µes com Blazor s√£o constru√≠das utilizando templates Razor, que s√£o executados no navegador e n√£o no servidor. De acordo com a documenta√ß√£o, um simples ‚ÄúHello world‚Äù requer 300KB de download. Isso inclui tudo o que √© necess√°rio, sendo:</p><ul><li>.NET runtime pequeno e leve</li><li>Core libs</li><li>C√≥digo da aplica√ß√£o</li><li>C√≥digos encapsulados necess√°rios para execu√ß√£o do c√≥digo WebAssembly</li></ul><p>Nenhum esfor√ßo foi feito para remover os c√≥digos desnecess√°rios, ent√£o ainda √© poss√≠vel reduzir o tamanho ainda mais.</p><p>Para ver Blazor em a√ß√£o, assista o v√≠deo da apresenta√ß√£o realizada na confer√™ncia NDC ‚ÄúWeb Apps can‚Äôt really do that, can they? - Steve Sanderson‚Äù (Aplica√ß√µes Web realmente n√£o podem fazer isso, n√£o √©?).</p><p>Artigo originalmente publicado no InfoQ<br><a href="https://www.infoq.com/br/news/2017/09/Blazor">https://www.infoq.com/br/news/2017/09/Blazor</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;O Blazor √© um experimento criado por Steve Sanderson que torna poss√≠vel a utiliza√ß√£o de .NET aos navegadores usando WebAssembly e DotNetAnywhere. N√£o se trata de um Framework completo como Flash ou Silverlight, mas sim um teste para verificar o que √© poss√≠vel fazer com tal tecnologia.&lt;/p&gt;</summary>
    
    
    
    
    <category term="blazor .net" scheme="http://www.dzfweb.com.br/tags/blazor-net/"/>
    
  </entry>
  
  <entry>
    <title>Qu√£o facil √© criar um plugin para NativeScript</title>
    <link href="http://www.dzfweb.com.br/2017/05/25/Quao-facil-e-criar-um-plugin-para-NativeScript/"/>
    <id>http://www.dzfweb.com.br/2017/05/25/Quao-facil-e-criar-um-plugin-para-NativeScript/</id>
    <published>2017-05-25T18:08:36.000Z</published>
    <updated>2023-01-28T20:24:05.394Z</updated>
    
    <content type="html"><![CDATA[<p>√â not√≥rio a crescente quantidade de plugins dispon√≠veis para NativeScript desenvolvidos pela comunidade, e o motivo disso n√£o √© apenas a boa vontade e senso de contribui√ß√£o por parte de quem desenvolve, e sim, inclusive, a facilidade que √© desenvolver um plugin para NativeScript, principalmente depois da vers√£o 3.0.</p><span id="more"></span><p>Neste artigo, irei demonstrar como desenvolvi o NativeScript Emoji, meu primeiro UI Plugin para NativeScript. Ao termino da leitura deste artigo, espero despertar em voc√™ o interesse em desenvolver tamb√©m um plugin e contribuir para a comunidade de desenvolvedores NativeScript, quem ganha com isso somos n√≥s mesmos.</p><h2 id="Por-onde-comecar"><a href="#Por-onde-comecar" class="headerlink" title="Por onde come√ßar?"></a>Por onde come√ßar?</h2><p>N√£o vou entrar em detalhes sobre toda a estrutura necessaria para desenvolver um plugin para NativeScript pois isso n√£o vai ser necess√°rio para este artigo. Vou demonstrar o basico que voc√™ precisa saber para come√ßar, mas caso prefira, a documenta√ß√£o completa voc√™ pode acessar clicando aqui.</p><p>A maneira mais facil de come√ßar um plugin para NativeScript, √© utilizando o NativeScript Plugin Seed, criado por NathanWalker. Esta biblioteca far√° todo o trabalho √°rduo de cria√ß√£o da estrutura de um plugin NativeScript, e isso √© realmente incr√≠vel. Veja como √© facil:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/NathanWalker/nativescript-plugin-seed.git myplugin</span><br><span class="line">cd myplugin</span><br><span class="line">npm run postclone</span><br><span class="line">npm run setup</span><br></pre></td></tr></table></figure><p>Pronto, com apenas estas etapas voc√™ ter√° criado toda estrutura necess√°ria para desenvolver, testar e publicar seu plugin, mas antes de por a m√£o na massa, vamos fazer uma breve introdu√ß√£o sobre o plugin que vamos desenvolver juntos neste artigo.</p><h2 id="O-plugin-NativeScript-Emoji"><a href="#O-plugin-NativeScript-Emoji" class="headerlink" title="O plugin NativeScript Emoji"></a>O plugin NativeScript Emoji</h2><p>O objetivo deste plugin √© entregar um elemento para a interface para exibir Emojis de forma amigavel. A minha ideia inicial era ter um elemento TextView onde ao definir o valor unicode ou hexadecimal do emoji na propriedade correspondente:</p><p><code>&lt;Emoji:Emoji icon=&quot;128514&quot;&gt;</code> exibir :üòÇ</p><p>O plugin faria a convers√£o para Emoji, e aqui eu deixo um destaque novamente para a comunidade NativeScript no Slack (se voc√™ ainda n√£o participa, fa√ßa sua inscri√ß√£o agora (clicando aqui), que me fizeram uma excelente sugest√£o de substituir a propriedade unicode por um valor amigavel e mais facil de lembrar, ficando ent√£o:</p><p><code>&lt;Emoji:Emoji name=&quot;joy&quot;&gt;</code> exibir :üòÇ</p><h2 id="Implementacao-para-Android-e-iOS"><a href="#Implementacao-para-Android-e-iOS" class="headerlink" title="Implementa√ß√£o para Android e iOS"></a>Implementa√ß√£o para Android e iOS</h2><p>Agora que j√° temos a defini√ß√£o do plugin e a estrutura criada, √© hora de por a m√£o na massa. A primeira coisa que precisamos fazer √© definir a implementa√ß√£o comum entre as plataformas, sabemos que iremos ter uma propriedade name que servir√° tanto para Android como para iOS, esta defini√ß√£o √© feita no arquivo common que foi gerado na primeira etapa deste artigo.</p><p><em>emoji.common.ts</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import &#123; View, Property &#125; from &quot;ui/core/view&quot;;</span><br><span class="line">export class EmojiCommon extends View &#123;</span><br><span class="line">  name: string;</span><br><span class="line">&#125;</span><br><span class="line">export const nameProperty = new Property&lt;EmojiCommon, string&gt;(</span><br><span class="line">  &#123;</span><br><span class="line">    name: &quot;name&quot;,</span><br><span class="line">    defaultValue: &quot;&quot;</span><br><span class="line">  &#125;);</span><br><span class="line">nameProperty.register(EmojiCommon);</span><br></pre></td></tr></table></figure><p>Como se trata de um plugin para interface, precisamos extender a classe View. Os atributos do elemento que iremos criar, definimos criando um novo objeto do tipo Property, a propriedade name definimos o nome do atributo e o valor padr√£o, como o pr√≥prio nome sugere, definimos na propriedade defaultValue. Se o valor deste atributo fosse diferente do tipo string, que n√£o √© o nosso caso, seria necess√°rio definir o valor para a propriedade valueConverter.</p><p>A codifica√ß√£o dos emojis s√£o distintas para cada plataforma, por tanto precisamos ter uma base de dados para armazenar esses valores para consultarmos durante a execu√ß√£o do plugin.</p><p><em>emoji.database.ts</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">export class EmojiDatabase &#123;</span><br><span class="line">    public static list(): Array&lt;any&gt; &#123;</span><br><span class="line">      return [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;name&quot;: &quot;FACE WITH TEARS OF JOY&quot;,</span><br><span class="line">        &quot;unicode&quot;: &quot;üòÇ&quot;,</span><br><span class="line">        &quot;hexcode&quot;: &quot;1F602&quot;,</span><br><span class="line">        &quot;codepoint&quot;: [</span><br><span class="line">            128514</span><br><span class="line">        ],</span><br><span class="line">        &quot;shortname&quot;: &quot;joy&quot;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Implementacao-para-Android"><a href="#Implementacao-para-Android" class="headerlink" title="Implementa√ß√£o para Android"></a>Implementa√ß√£o para Android</h2><p>Agora que ja temos os atributos do elemento que iremos criar, precisamos implementar o codigo respons√°vel por gerar o elemento correspondente a cada plataforma. O NativeScript interpretar√° em tempo de execu√ß√£o o codigo espec√≠fico para Android atrav√©z do seguinte arquivo.</p><p><em>emoji.android.ts</em> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import &#123; nameProperty, EmojiCommon &#125; from &quot;./emoji.common&quot;;</span><br><span class="line">import &#123; EmojiDatabase &#125; from &quot;./emoji.database&quot;;</span><br><span class="line">import * as utils from &quot;tns-core-modules/utils/utils&quot;;</span><br><span class="line">declare var java: any;</span><br><span class="line">global.moduleMerge(EmojiCommon, exports);</span><br><span class="line">export class Emoji extends EmojiCommon &#123;</span><br><span class="line">  [nameProperty.getDefault](): string &#123;</span><br><span class="line">    return &#x27;&#x27;;</span><br><span class="line">  &#125;</span><br><span class="line">  [nameProperty.setNative](value: string) &#123;</span><br><span class="line">    let emoji = EmojiDatabase.list().find((el) =&gt; el.shortname ##= value).codepoint[0];</span><br><span class="line">    this.nativeView.setText(new java.lang.String(java.lang.Character.toChars(emoji)));</span><br><span class="line">  &#125;</span><br><span class="line">  private _android: android.widget.TextView;</span><br><span class="line">  get android() &#123;</span><br><span class="line">    return this.nativeView;</span><br><span class="line">  &#125;</span><br><span class="line">  public createNativeView() &#123;</span><br><span class="line">    this._android = new android.widget.TextView(utils.ad.getApplicationContext());</span><br><span class="line">    return this._android;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>O primeiro passo √© extender a classe common criada anteriormente. Por se tratar de um plugin para interface, √© necess√°rio implementarmos o m√©todo createNativeView, que far√° com que o o NativeScript entenda que algum elemento tem de ser criado na View. No nosso caso criaremos um TextView.</p><p>E novamente aqui temos outra grande ajuda do framework, a equipe do NativeScript mapeou todas as propriedades e m√©todos nativos de cada plataforma e gerou as defini√ß√µes em TypeScript, o que nos da a possibilidade de navegar por todas estas defini√ß√µes nativas diretamente no editor.</p><p>Temos que definir tamb√©m o que o plugin far√° quando receber o atributo name, isso √© definido implementando o m√©todo setNative, que no nosso caso ir√° consultar o nome do emoji na base de dados, e com base no codigo correspondente, definira o valor para o TextView criado anteriormente. O metodo getDefault √© para casos em que nenhum valor seja definido.</p><h2 id="Implementacao-para-iOS"><a href="#Implementacao-para-iOS" class="headerlink" title="Implementa√ß√£o para iOS"></a>Implementa√ß√£o para iOS</h2><p>Podemos copiar a mesma implementa√ß√£o feita para o Android, e alterar somente as partes onde √© criado e definido o valor para o elemento nativo, que no caso do iOS ser√° o UILabel ficando da seguinte maneira.</p><p><em>emoji.ios.ts</em> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import &#123; nameProperty, EmojiCommon &#125; from &quot;./emoji.common&quot;;</span><br><span class="line">import &#123; EmojiDatabase &#125; from &quot;./emoji.database&quot;;</span><br><span class="line">global.moduleMerge(EmojiCommon, exports);</span><br><span class="line">export class Emoji extends EmojiCommon &#123;</span><br><span class="line">  [nameProperty.getDefault](): number &#123;</span><br><span class="line">    return 0;</span><br><span class="line">  &#125;</span><br><span class="line">  [nameProperty.setNative](value: string) &#123;</span><br><span class="line">    let emoji = EmojiDatabase.list().find((el) =&gt; el.shortname ##= value).unicode;</span><br><span class="line">    let nsString = NSString.stringWithString(emoji);</span><br><span class="line">    this.nativeView.text = nsString;</span><br><span class="line">  &#125;</span><br><span class="line">  private _ios: UILabel;</span><br><span class="line">  get ios() &#123;</span><br><span class="line">    return this.nativeView;</span><br><span class="line">  &#125;</span><br><span class="line">  public createNativeView() &#123;</span><br><span class="line">    this._ios = UILabel.alloc().init();</span><br><span class="line">    return this._ios;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Novamente aqui ser√° possivel acessar a defini√ß√£o dos metodos nativos para iOS, no metodo createNativeView √© criado um UILabel e no m√©todo setNative √© definido o valor para o elemento criado.</p><h2 id="Testando-o-plugin"><a href="#Testando-o-plugin" class="headerlink" title="Testando o plugin"></a>Testando o plugin</h2><p>Sim, terminamos a implementa√ß√£o do plugin e o que resta agora √© apenas testarmos. Rapido n√£o? Para testarmos precisamos adicionar o plugin ao projeto demo criado nas etapas iniciais deste artigo. Para isso, √© necess√°rio executar o comando:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run preparedemo</span><br></pre></td></tr></table></figure><p>Adicionar a referencia do elemento no elemento Page do arquivo main-page.xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns:Emoji=&quot;nativescript-emoji&quot;</span><br></pre></td></tr></table></figure><p>e ent√£o adicionar o elemento no dentro do StackLayout</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Emoji:Emoji name=&quot;joy&quot; /&gt;</span><br></pre></td></tr></table></figure><p>Ficando da seguinte maneira.</p><p><em>main-page.xml</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;Page xmlns=&quot;http://schemas.nativescript.org/tns.xsd&quot; xmlns:Emoji=&quot;nativescript-emoji&quot; navigatingTo=&quot;navigatingTo&quot; class=&quot;page&quot;&gt;</span><br><span class="line">  </span><br><span class="line">    &lt;Page.actionBar&gt;</span><br><span class="line">        &lt;ActionBar title=&quot;NativeScript Emoji&quot; icon=&quot;&quot; class=&quot;action-bar&quot;&gt;</span><br><span class="line">        &lt;/ActionBar&gt;</span><br><span class="line">    &lt;/Page.actionBar&gt;</span><br><span class="line">    &lt;StackLayout orientation=&quot;horizontal&quot;&gt;</span><br><span class="line">        &lt;Label text=&quot;I&#x27;m happy &quot;&gt; &lt;/Label&gt;</span><br><span class="line">        &lt;Emoji:Emoji name=&quot;joy&quot; /&gt;</span><br><span class="line">        &lt;Emoji:Emoji name=&quot;joy&quot; /&gt;</span><br><span class="line">        &lt;Emoji:Emoji name=&quot;joy&quot; /&gt;</span><br><span class="line">    &lt;/StackLayout&gt;</span><br><span class="line">&lt;/Page&gt;</span><br></pre></td></tr></table></figure><p>Agora resta executar o projeto de demonstra√ß√£o nos emuladores de cada plataforma executando os seguintes comandos.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmm run demo.ios</span><br><span class="line">npm run demo.android</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/dzfweb/nativescript-emoji/master/emojiprintscreen.png" alt="image"></p><h2 id="Conclusao"><a href="#Conclusao" class="headerlink" title="Conclus√£o"></a>Conclus√£o</h2><p>Podemos ver como √© facil e rapido desenvolver um plugin para NativeScript, destaco alguns pontos como a comunidade de desenvolvedores NativeScript que s√£o bem participativos, a equipe da Telerik que a procura entregar a cada vers√£o ferramentas que vis√£o tornar nosso trabalho como desenvolvedor muito mais produtivo e lan√ßo o convite para voc√™ desenvolvedor que est√° lendo este artigo. Voc√™ desenvolveu algo customizado em algum projeto? Tem alguma ideia sobre alguma ferramenta que possa ser util? Contribua conosco tamb√©m.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;√â not√≥rio a crescente quantidade de plugins dispon√≠veis para NativeScript desenvolvidos pela comunidade, e o motivo disso n√£o √© apenas a boa vontade e senso de contribui√ß√£o por parte de quem desenvolve, e sim, inclusive, a facilidade que √© desenvolver um plugin para NativeScript, principalmente depois da vers√£o 3.0.&lt;/p&gt;</summary>
    
    
    
    
    <category term="NativeScript" scheme="http://www.dzfweb.com.br/tags/NativeScript/"/>
    
  </entry>
  
  <entry>
    <title>Curso NativeScript: Criando um novo projeto com Angular 2</title>
    <link href="http://www.dzfweb.com.br/2017/04/21/Curso-NativeScript-Criando-um-novo-projeto-com-Angular-2/"/>
    <id>http://www.dzfweb.com.br/2017/04/21/Curso-NativeScript-Criando-um-novo-projeto-com-Angular-2/</id>
    <published>2017-04-21T18:08:24.000Z</published>
    <updated>2023-01-28T20:23:17.226Z</updated>
    
    <content type="html"><![CDATA[<p>Fala pessoal, compartilho com voc√™s uma video aula parte do curso NativeScript com Angular 2 que estou gravando.</p><span id="more"></span><iframe width="560" height="315" src="https://www.youtube.com/embed/2yZAKoMIv3Y" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;Fala pessoal, compartilho com voc√™s uma video aula parte do curso NativeScript com Angular 2 que estou gravando.&lt;/p&gt;</summary>
    
    
    
    
    <category term="treinamento NativeScript Angular+ Mobile" scheme="http://www.dzfweb.com.br/tags/treinamento-NativeScript-Angular-Mobile/"/>
    
  </entry>
  
  <entry>
    <title>Vencedor da premia√ß√£o GS1 no AngelHack SP 2016</title>
    <link href="http://www.dzfweb.com.br/2016/04/18/Vencedor-da-premiacao-GS1-no-AngelHack-SP-2016/"/>
    <id>http://www.dzfweb.com.br/2016/04/18/Vencedor-da-premiacao-GS1-no-AngelHack-SP-2016/</id>
    <published>2016-04-18T18:08:08.000Z</published>
    <updated>2023-01-28T20:24:11.989Z</updated>
    
    <content type="html"><![CDATA[<p>Este fim de semana participei do maior hackaton do mundo, presente em diversos pa√≠ses, o AngelHack edi√ß√£o S√£o Paulo 2016.</p><p>O concurso reuniu 220 estudantes e profissionais das √°reas de programa√ß√£o de software, design e comunica√ß√£o. Foram cerca de 30 horas de imers√£o intensa para que equipes multidisciplinares, com ajuda de cerca de 80 mentores, criem solu√ß√µes tecnol√≥gicas em formato de aplicativos voltados ao bem social ou pesquisa e inova√ß√£o.</p><span id="more"></span><p>A minha equipe foi vencedora na categoria Inova√ß√£o Tecnol√≥gia em C√≥digo de barras. Desenvolvemos uma solu√ß√£o multiplataforma de comercio e doa√ß√£o de produtos perec√≠veis, aproveitando das APIs da GS1 para cadastrar e consultar produtos pelo c√≥digo de barras.</p><p>Foi uma experi√™ncia muito boa participar de um evento repleto de programadores e pessoas que amam tecn√≥logia, segue algumas fotos.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Este fim de semana participei do maior hackaton do mundo, presente em diversos pa√≠ses, o AngelHack edi√ß√£o S√£o Paulo 2016.&lt;/p&gt;
&lt;p&gt;O concurso reuniu 220 estudantes e profissionais das √°reas de programa√ß√£o de software, design e comunica√ß√£o. Foram cerca de 30 horas de imers√£o intensa para que equipes multidisciplinares, com ajuda de cerca de 80 mentores, criem solu√ß√µes tecnol√≥gicas em formato de aplicativos voltados ao bem social ou pesquisa e inova√ß√£o.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Premia√ß√£o Hackaton" scheme="http://www.dzfweb.com.br/tags/Premiacao-Hackaton/"/>
    
  </entry>
  
  <entry>
    <title>Falando um pouco sobre o HASH MD5 no TISS</title>
    <link href="http://www.dzfweb.com.br/2014/09/22/Falando-um-pouco-sobre-o-HASH-MD5-no-TISS/"/>
    <id>http://www.dzfweb.com.br/2014/09/22/Falando-um-pouco-sobre-o-HASH-MD5-no-TISS/</id>
    <published>2014-09-22T18:05:43.000Z</published>
    <updated>2023-01-28T20:23:41.819Z</updated>
    
    <content type="html"><![CDATA[<p>Criei essa postagem com o intuito de ajudar outros desenvolvedores que encontraram a mesma dificuldade que eu encontrei durante o processo de desenvolvimento de m√≥dulos TISS e valida√ß√µes do HASH MD5.</p><span id="more"></span><p>Para introduzir ao texto vamos a defini√ß√µes (bem resumida):</p><h2 id="O-que-e-TISS"><a href="#O-que-e-TISS" class="headerlink" title="O que √© TISS?"></a>O que √© TISS?</h2><p>_A TISS - Troca de Informa√ß√£o em Sa√∫de Suplementar √© um padr√£o para registro e interc√¢mbio de dados entre operadoras de planos privados de assist√™ncia √† sa√∫de e prestadores de servi√ßos m√©dico-hospitalares da Ag√™ncia Nacional de Sa√∫de Suplementar ‚Äì ANS.<br>_</p><h2 id="O-que-e-Hash-MD5"><a href="#O-que-e-Hash-MD5" class="headerlink" title="O que √© Hash MD5?"></a>O que √© Hash MD5?</h2><p>O MD5 (Message Digest algorithm 5) √© um algoritmo de hash de 128 bits unidirecional desenvolvido pela RSA Data Security, Inc., descrito na RFC 1321, e muito utilizado por softwares com protocolo ponto-a-ponto (P2P, ou Peer-to-Peer, em ingl√™s), a verifica√ß√£o de integridade de arquivos e logins.</p><h2 id="Qual-a-finalidade-do-Hash-MD5-no-TISS"><a href="#Qual-a-finalidade-do-Hash-MD5-no-TISS" class="headerlink" title="Qual a finalidade do Hash MD5 no TISS?"></a>Qual a finalidade do Hash MD5 no TISS?</h2><p>A troca de comunica√ß√£o entre as operadores e prestadoras nos webservice Tiss s√£o conduzidas em arquivos XML bem estruturados e complexos. O Hash MD5 existe para garantir a integridade do arquivo, uma vez que o conte√∫do dos elementos do XML s√£o utilizados para gerar a encriptografia Hash. Isso garante que o arquvio n√£o foi alterado manualmente, pois uma simples troca de caractere ou espa√ßo em branco por exemplo, mudaria completamente o HASH MD5 do arquivo.</p><h2 id="Como-calcular-o-Hash-MD5-para-o-TISS"><a href="#Como-calcular-o-Hash-MD5-para-o-TISS" class="headerlink" title="Como calcular o Hash MD5 para o TISS?"></a>Como calcular o Hash MD5 para o TISS?</h2><p>Concatenar o conte√∫do de todos os elementos em uma unica String.<br>Remover espa√ßos em brancos APENAS no inicio e fim do arquivo.<br>Caracteres especiais, acentua√ß√µes e tra√ßos dever√£o ser mantidos.<br>A codifica√ß√£o MD5 deve ser gerada no padr√£o UTF-8.</p><p>Exemplo de m√©todo para gerar calculo MD5 para o TISS em C# .NET</p><p>Abaixo um m√©todo simples que utilizo para gerar o Hash MD5.</p><h2 id="Metodo-para-gerar-HashMD5"><a href="#Metodo-para-gerar-HashMD5" class="headerlink" title="M√©todo para gerar HashMD5"></a>M√©todo para gerar HashMD5</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public static string getMD5Hash(string input)</span><br><span class="line">&#123;</span><br><span class="line">    System.Security.Cryptography.MD5 md5 = System.Security.Cryptography.MD5.Create();</span><br><span class="line">    byte[] inputBytes = System.Text.Encoding.UTF8.GetBytes(input);</span><br><span class="line">    byte[] hash = md5.ComputeHash(inputBytes);</span><br><span class="line">    System.Text.StringBuilder sb = new System.Text.StringBuilder();</span><br><span class="line">    for (int i = 0; i &lt; hash.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sb.Append(hash[i].ToString(&quot;x2&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">    return sb.ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Criei essa postagem com o intuito de ajudar outros desenvolvedores que encontraram a mesma dificuldade que eu encontrei durante o processo de desenvolvimento de m√≥dulos TISS e valida√ß√µes do HASH MD5.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Criptografia" scheme="http://www.dzfweb.com.br/tags/Criptografia/"/>
    
  </entry>
  
  <entry>
    <title>Desenvolvimento Android e iOS com .NET e Visual Studio</title>
    <link href="http://www.dzfweb.com.br/2014/04/25/Desenvolvimento%20Android%20e%20iOS%20com%20.NET%20e%20Visual%20Studio/"/>
    <id>http://www.dzfweb.com.br/2014/04/25/Desenvolvimento%20Android%20e%20iOS%20com%20.NET%20e%20Visual%20Studio/</id>
    <published>2014-04-25T18:01:43.000Z</published>
    <updated>2023-01-28T20:23:36.400Z</updated>
    
    <content type="html"><![CDATA[<p>Desenvolvimento mobile sempre foi um grande desafio para muitos desenvolvedores devido a suas limita√ß√µes em op√µes de plataformas para trabalhar, seja para Android ou iOS. Deve-se estudar ambientes de produ√ß√£o diferentes, Eclipse, objective C, java, etc.</p><span id="more"></span><p>O Xamarin √© uma grande e robusta ferramenta paga (e muito cara por sinal, com a licen√ßaa de uso mais barata de U$299,90 por ano) para desenvolvedores familiarizados com o .NET Framework , sendo poss√≠vel utilizar o imenso repert√≥rio de bibliotecas que este incr√≠vel framework da Microsoft disponibiliza com c#, para desenvolver aplica√ß√µes mobiles. O Xamarin conta com uma documenta√ß√£o gigantesca para estudo, com exemplos de diversos recursos, projetos prontos para download, comunidade para debate com outros desenvolvedores especializados no assunto.</p><p>Se voc√™ √© um desenvolvedor web .NET e deseja se aventurar por uma novo cen√°rio de desenvolvimento, no caso o Desenvolvimento Mobile, uma das √°reas mais procuradas para projetos em crescente a cada ano devido ao avan√ßo tecnol√≥gico m√≥vel, esta √© uma ferramenta profissional muito boa de se estudar.</p><p>Mais informa√ß√µes no site oficial do Xamarin </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Desenvolvimento mobile sempre foi um grande desafio para muitos desenvolvedores devido a suas limita√ß√µes em op√µes de plataformas para trabalhar, seja para Android ou iOS. Deve-se estudar ambientes de produ√ß√£o diferentes, Eclipse, objective C, java, etc.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Mobile .NET Android iOS" scheme="http://www.dzfweb.com.br/tags/Mobile-NET-Android-iOS/"/>
    
  </entry>
  
  <entry>
    <title>O C√≥digo Fonte do seu Projeto .NET est√° protegido?</title>
    <link href="http://www.dzfweb.com.br/2013/12/01/O-Codigo-Fonte-do-seu-Projeto-NET-esta-protegido/"/>
    <id>http://www.dzfweb.com.br/2013/12/01/O-Codigo-Fonte-do-seu-Projeto-NET-esta-protegido/</id>
    <published>2013-12-01T17:07:04.000Z</published>
    <updated>2023-01-28T20:23:59.056Z</updated>
    
    <content type="html"><![CDATA[<p>Provavelmente voc√™ Desenvolvedor j√° deve ter se perguntado: ‚ÄúSer√° que meu c√≥digo est√° protegido?‚Äù. Eu me deparei com esse questionamento ao termino de um sistema que desenvolvi em .NET e estava preste a por em produ√ß√£o, e como todo desenvolvedor precavido, iniciei uma pesquisa sob metodologias para proteger meu Sistema e, consequentemente, o c√≥digo-fonte do Sistema.</p><span id="more"></span><p>Bom, esse estudo me trouxe uma inseguran√ßa quanto a Tecnologia .NET, que para mim at√© ent√£o, era considerada muito segura. Pasmem, √© poss√≠vel extrair o c√≥digo-fonte de qualquer projeto .NET (C#, VB, etc). Neste artigo vou compartilhar com voc√™s como √© poss√≠vel fazer isso e como proteger o seu c√≥digo e dificultar um pouco essa pr√°tica.</p><h2 id="Entendendo-as-DLL-e-Executaveis-NET"><a href="#Entendendo-as-DLL-e-Executaveis-NET" class="headerlink" title="Entendendo as DLL e Execut√°veis .NET"></a>Entendendo as DLL e Execut√°veis .NET</h2><p>De forma resumida, quando voc√™ compila um c√≥digo em .NET, este n√£o √© convertido para linguagem de maquina. Todas linguagens .NET s√£o convertidas para MSIL (Microsoft Intermediate Language) . A MSIL √© convertida em tempo de execu√ß√£o. Este processo oferece algumas vantagens como a consulta de Assemblys dinamicamente e seus m√©todos. Por√©m, gra√ßas a este processo, tamb√©m √© poss√≠vel atrav√©s de engenharia reversa, acessar todo o algoritmo do c√≥digo, seus m√©todos, vari√°veis, etc.</p><h2 id="Descompiladores-NET"><a href="#Descompiladores-NET" class="headerlink" title="Descompiladores .NET"></a>Descompiladores .NET</h2><p>A Microsoft possui uma esp√©cie de Descompilador MSIL onde √© poss√≠vel acessar os m√©todos de qualquer assembly .NET (Saiba mais clicando aqui) entretanto, existe alguns descompiladores mais utilizados que oferecem algumas fun√ß√µes al√©m como por exemplo extrair todo o c√≥digo fonte da Assembly, inclusive o .CSPROJ.</p><p>Estou falando do Reflector (baixe aqui) e do plugin File Disasembler (baixe aqui). Voc√™ ver√° a seguir como os dois juntos conseguem extrair o c√≥digo fonte de DLL ou Execut√°veis .NET.</p><p>Esta √© a Interface do Reflector. Logo ao abrir o programa, ele carrega por padr√£o as Assembly da Microsoft, onde j√° √© poss√≠vel navegar pelos m√©todos. At√© ent√£o, em espantos, pois com o Visual Studio j√° √© poss√≠vel fazer isto.</p><p>Reflector</p><p>Criei um novo projeto Windows Form C# bem simples para usar no exemplo. Possui 1 Form e um m√©todo. No programa Reflector &gt; Open Assembly selecionei o execut√°vel que fiz, e ent√£o o programa descopbila o MSIL do programa e exibe os m√©todos.</p><p>Reflector</p><p>Agora vou utilizar o Plugin File Disasembler selecionando a no menu Tools &gt; File Disasembler, na janela que se abre eu informo o tipo do Projeto como Windows Form e o caminho para a sa√≠da dos arquivos descompilados. O Plugin ent√£o extrai todo o c√≥digo fonte da Assembly selecionada.</p><p>Reflector</p><p>E ent√£o ap√≥s este simples processo e com acesso ao c√≥digo fonte da Assembly, posso abrir no Visual Studio sem nenhum problema.</p><p>Reflector</p><p>Ficou espantado? Pois √© eu tamb√©m. E por conta disso parti para outra pesquisa.</p><h2 id="Como-Proteger-Codigos-NET-com-Dotfuscator"><a href="#Como-Proteger-Codigos-NET-com-Dotfuscator" class="headerlink" title="Como Proteger C√≥digos .NET com Dotfuscator"></a>Como Proteger C√≥digos .NET com Dotfuscator</h2><p>A partir da vers√£o 2012 do Visual Studio, a extens√£o Dotfuscator da empresa PreEmptive, vem por padr√£o instalada e √© poss√≠vel acessar em Tools &gt;** PreEmptive Dotfuscator and Analitics **.</p><p>1- Ao abrir a Interface do DotFuscator, inicie um novo projeto File &gt; New Project.</p><p>2- Clique em Inputs e ao lado, adicione as Assembly ou Execut√°veis que deseja ofuscar.<br>(Ex: ..ProjetoBinMeuProjeto.exe)</p><p>3- Clique em Build &gt; Build Project. Este processo ir√° criar uma pasta no diretorio do seu Projeto selecionado com o nome Dotfuscated e o Execut√°vel ou DLL com o MSIL ofuscado.</p><p>1<br>Pronto, o seu c√≥digo foi protegido e n√£o √© possivel descompilar. Basta agora distribuir o execut√°vel ofuscado para seus clientes. Caso tente fazer isso no Reflector, o resultado ser√° um arquivo encriptografado e ileg√≠vel.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Provavelmente voc√™ Desenvolvedor j√° deve ter se perguntado: ‚ÄúSer√° que meu c√≥digo est√° protegido?‚Äù. Eu me deparei com esse questionamento ao termino de um sistema que desenvolvi em .NET e estava preste a por em produ√ß√£o, e como todo desenvolvedor precavido, iniciei uma pesquisa sob metodologias para proteger meu Sistema e, consequentemente, o c√≥digo-fonte do Sistema.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Seguran√ßa .NET" scheme="http://www.dzfweb.com.br/tags/Seguranca-NET/"/>
    
  </entry>
  
</feed>
